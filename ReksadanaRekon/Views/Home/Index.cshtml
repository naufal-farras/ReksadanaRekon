@{
    ViewBag.Title = "Home Page";
}

@*<div class="jumbotron">
        <h1>RENA</h1>
        <p class="lead">Rekonsiliasi Reksadana</p>
        <p><a href="/Uploads" class="btn btn-primary btn-lg">Upload File</a></p>
    </div>*@

@*<div class="row">
        <div class="col-md-4">
            <div class="well">
                <h4 class="text-center">Result Rekonsiliasi</h4>
                <canvas id="chartjs-1" class="chartjs" width="undefined" height="undefined"></canvas>
            </div>
        </div>
        <div class="col-md-4">
            <div class="well">
                <h4 class="text-center">Management Investment</h4>
                <canvas id="chartjs-2" class="chartjs" width="undefined" height="undefined"></canvas>
            </div>
        </div>
        <div class="col-md-4">
            <div class="well">
                <h4 class="text-center">Selling Agent - Fund</h4>
                <canvas id="chartjs-3" class="chartjs" width="undefined" height="undefined"></canvas>
            </div>
        </div>
    </div>*@
<div class="row">
    <div class="col-md-12">
        <div class="well">
            <h4 class="text-center">History Transaction Result</h4>
            <canvas id="lineHistory" class="chartjs" width="undefined" height="undefined"></canvas>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div class="well">
            <h4 class="text-center">Result Rekonsiliasi</h4>
            <canvas id="pieResult" class="chartjs" width="undefined" height="undefined"></canvas>
        </div>
    </div>
    <div class="col-md-6">
        <div class="well">
            <h4 class="text-center">Management Investment</h4>
            <canvas id="pieMI" class="chartjs" width="undefined" height="undefined"></canvas>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div class="well">
            <h4 class="text-center">Selling Agent</h4>
            <canvas id="pieSA" class="chartjs" width="undefined" height="undefined"></canvas>
        </div>
    </div>
    <div class="col-md-6">
        <div class="well">
            <h4 class="text-center">Fund Product</h4>
            <canvas id="pieFund" class="chartjs" width="undefined" height="undefined"></canvas>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.12.4.js"></script>
<script>

    window.chartColors = {
        red: 'rgb(255, 99, 132)',
        orange: 'rgb(255, 159, 64)',
        yellow: 'rgb(255, 205, 86)',
        green: 'rgb(75, 192, 192)',
        darkmountain: 'rgb(12, 136, 104)',
        blue: 'rgb(54, 162, 235)',
        bluede: 'rgba(46, 134, 222)',
        purple: 'rgb(153, 102, 255)',
        blueball: 'rgb(52, 31, 151)',
        grey: 'rgb(201, 203, 207)'
    };
    var color = Chart.helpers.color;

    function UpdatePieResult(chart) {
        var colorNames = Object.keys(window.chartColors);
        $.ajax({
            url: "@Url.Action("pieResult", "Home")",
            type: 'GET',
            dataType: 'json',
            success: function (result) {
                var labels = [], datas = [], colors = [], dataset = [];
                $.each(result, function (index, val) {
                    labels.push(val.Nama + ' - ' + val.NamaDua);
                    datas.push(Math.round(val.Total));
                    var colorName = colorNames[labels.length % colorNames.length];
                    var newColor = window.chartColors[colorName];
                    colors.push(newColor);
                })
                var data = {
                    labels: labels,
                    datasets: [{
                        label: "Jumlah Data SA",
                        data: datas,
                        backgroundColor: colors
                    }]
                }

                chart.data.labels = data.labels
                chart.data.datasets = data.datasets
                chart.options.tooltips.callbacks.label = function (tooltipItem, data) {
                    var value = data.labels[tooltipItem.index] + " : " + plustitik(data.datasets[0].data[tooltipItem.index]) + " data ";
                    return value;
                }
                chart.update()
            }
        });
    }
    function UpdatePieSA(chart) {
        var colorNames = Object.keys(window.chartColors);
        $.ajax({
            url: "@Url.Action("pieSA", "Home")",
            type: 'GET',
            dataType: 'json',
            success: function (result) {
                var labels = [], datas = [], colors = [], dataset = [];
                $.each(result, function (index, val) {
                    labels.push(val.Nama);
                    datas.push(Math.round(val.Total));
                    var colorName = colorNames[labels.length % colorNames.length];
                    var newColor = window.chartColors[colorName];
                    colors.push(newColor);
                })
                var data = {
                    labels: labels,
                    datasets: [{
                        label: "Jumlah Data SA",
                        data: datas,
                        backgroundColor: colors
                    }]
                }

                chart.data.labels = data.labels
                chart.data.datasets = data.datasets
                chart.options.tooltips.callbacks.label = function (tooltipItem, data) {
                    var value = data.labels[tooltipItem.index] + " : " + plustitik(data.datasets[0].data[tooltipItem.index]) + " data ";
                    return value;
                }
                chart.update()
            }
        });
    }
    function UpdatePieMI(chart) {
        var colorNames = Object.keys(window.chartColors);
        $.ajax({
            url: "@Url.Action("pieMI", "Home")",
            type: 'GET',
            dataType: 'json',
            success: function (result) {
                var labels = [], datas = [], colors = [], dataset = [];
                $.each(result, function (index, val) {
                    labels.push(val.Nama);
                    datas.push(Math.round(val.Total));
                    var colorName = colorNames[labels.length % colorNames.length];
                    var newColor = window.chartColors[colorName];
                    colors.push(newColor);
                })
                var data = {
                    labels: labels,
                    datasets: [{
                        label: "Jumlah Data SA",
                        data: datas,
                        backgroundColor: colors
                    }]
                }

                chart.data.labels = data.labels
                chart.data.datasets = data.datasets
                chart.options.tooltips.callbacks.label = function (tooltipItem, data) {
                    var value = data.labels[tooltipItem.index] + " : " + plustitik(data.datasets[0].data[tooltipItem.index]) + " data ";                    
                    return value;
                }
                chart.update()
            }
        });
    }
    function UpdatePieFund(chart) {
        var colorNames = Object.keys(window.chartColors);
        $.ajax({
            url: "@Url.Action("pieFund", "Home")",
            type: 'GET',
            dataType: 'json',
            success: function (result) {
                var labels = [], datas = [], colors = [], dataset = [];
                $.each(result, function (index, val) {
                    labels.push(fundreplace(val.Nama));
                    datas.push(Math.round(val.Total));
                    var colorName = colorNames[labels.length % colorNames.length];
                    var newColor = window.chartColors[colorName];
                    colors.push(newColor);
                })
                var data = {
                    labels: labels,
                    datasets: [{
                        label: "Jumlah Data SA",
                        data: datas,
                        backgroundColor: colors
                    }]
                }

                chart.data.labels = data.labels
                chart.data.datasets = data.datasets
                chart.options.tooltips.callbacks.label = function (tooltipItem, data) {
                    var value = data.labels[tooltipItem.index] + " : " + plustitik(data.datasets[0].data[tooltipItem.index]) + " data ";
                    return value;
                }
                chart.update()
            }
        });
    }

    function UpdateLineHistory(chart) {
        var colorNames = Object.keys(window.chartColors);
        $.ajax({
            url: "@Url.Action("lineHistoryLabel", "Home")",
            type: 'GET',
            dataType: 'json',
            success: function (labels) {
                $.ajax({
                    url: "@Url.Action("lineHistoryData", "Home")",
                    type: 'GET',
                    dataType: 'json',
                    success: function (result) {
                        var labeldata1 = '', labeldata2 = '';
                        var label = [], datas1 = [], datas2 = [], dataset = [];
                        $.each(labels, function (index, val) {
                            label.push(val.Label);
                        })
                        $.each(result, function (index, value) {
                            datas1.push(Math.round(value.Count));
                            datas2.push(Math.round(value.Amount / 1000000));
                        })
                        labeldata1 = "Jumlah Transaksi";
                        labeldata2 = "Jumlah Nominal (Jutaan)";
                        var colorName1 = colorNames[17 % colorNames.length];
                        var newColor1 = window.chartColors[colorName1];
                        var colorName2 = colorNames[15 % colorNames.length];
                        var newColor2 = window.chartColors[colorName2];
                        dataset.push({ label: labeldata1, data: datas1, fill: false, borderColor: newColor1, lineTension: 0.1 });
                        dataset.push({ label: labeldata2, data: datas2, fill: false, borderColor: newColor2, lineTension: 0.1 });
                        var data = {
                            labels: label,
                            datasets: dataset
                        }

                        chart.data.labels = data.labels
                        chart.data.datasets = data.datasets
                        chart.update()
                    }
                });
            }
        });
    }

    function fundreplace(str) {
        var data = str.replace('REKSA DANA', '');
        return data;
    }

    function plustitik(angka) {
        var rupiah = '';
        var angkarev = angka.toString().split('').reverse().join('');
        for (var i = 0; i < angkarev.length; i++) if (i % 3 == 0) rupiah += angkarev.substr(i, 3) + ',';
        return rupiah.split('', rupiah.length - 1).reverse().join('');
    }

    $(document).ready(function () {
        var lineHistory = new Chart($("#lineHistory"), { type: 'line', data: { labels: [], datasets: [] }, options: { legend: { position: 'bottom' } } });
        var pieResult = new Chart($("#pieResult"), { type: 'doughnut', data: { labels: [], datasets: [] }, options: { legend: { position: 'bottom' } } });
        var pieMI = new Chart($("#pieMI"), { type: 'doughnut', data: { labels: [], datasets: [] }, options: { legend: { position: 'bottom' } } });
        var pieSA = new Chart($("#pieSA"), { type: 'doughnut', data: { labels: [], datasets: [] }, options: { legend: { position: 'bottom' } } });
        var pieFund = new Chart($("#pieFund"), { type: 'doughnut', data: { labels: [], datasets: [] }, options: { legend: { position: 'bottom' } } });
        //var lineHistory = new Chart($("#lineHistory"), {
        //    type: 'line',
        //    data: {
        //        labels: [],
        //        datasets: []
        //    },
        //    options: {
        //        legend: { position: 'bottom' },
        //        tooltips: {
        //            callbacks: {
        //                label: function (tooltipItem, data) {
        //                    var value = plustitik(data.datasets[0].data[tooltipItem.index]);
        //                    //value = value.toString();
        //                    //value = value.split(/(?=(?:...)*$)/);
        //                    //value = value.join(',');
        //                    return value;
        //                }
        //            } // end callbacks:
        //        }, //end tooltips
        //        scales: {
        //            yAxes: [{
        //                ticks: {
        //                    beginAtZero: true,
        //                    userCallback: function (value, index, values) {
        //                        // Convert the number to a string and splite the string every 3 charaters from the end
        //                        value = plustitik(value);
        //                        //value = value.toString();
        //                        //value = value.split(/(?=(?:...)*$)/);
        //                        //value = value.join(',');
        //                        return value;
        //                    }
        //                }
        //            }],
        //            xAxes: [{
        //                ticks: {
        //                }
        //            }]
        //        }
        //    }
        //});
                
        UpdateLineHistory(lineHistory);
        UpdatePieResult(pieResult);
        UpdatePieMI(pieMI);
        UpdatePieSA(pieSA);
        UpdatePieFund(pieFund);
    })
</script>
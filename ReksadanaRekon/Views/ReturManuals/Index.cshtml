@model ReksadanaRekon.ViewModels.FundReturVM
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    div.dataTables_wrapper {
        width: 100%;
        margin: 0 auto;
    }

    th {
        font-size: 12px;
    }

    td {
        font-size: 12px;
    } 
</style>
<div class="row">
    <div class="well">
        <div class="col-sm-2 text-left">
            <button class="btn btn-success btn-sm" onclick="AcceptApp()">Accept</button>
            <button class="btn btn-danger btn-sm" onclick="RejectApp()">Reject</button>
        </div>
        <h5 class="text-center col-sm-9"><b>Data Retur</b></h5>
        <div class="col-sm-1">
            @using (Html.BeginForm("DownloadApp", "ReturManuals", FormMethod.Post, new { id = "formApp", @class = "form-horizontal" }))
            {
                <button type="submit" value="" class="btn btn-sm btn-primary">Download</button>
            }
        </div>
        <table id="tabelapp" class="table table-bordered table-hover" style="width:100%;">
            <thead>
                <tr>
                    <th><input type="checkbox" id="allCbApp"></th>
                    <th class="text-center">No</th>
                    <th class="text-center">Tanggal Transaksi</th>
                    <th class="text-center">Rek. Reksadana</th>
                    <th class="text-center">SA</th>
                    <th class="text-center">IFUA Name</th>
                    <th class="text-center">Fund</th>
                    <th class="text-center">MI</th>
                    <th class="text-center">Bank</th>
                    <th class="text-center">No. Rekening</th>
                    <th class="text-center">Nasabah</th>
                    <th class="text-center">Nominal</th>
                    <th class="text-center">Keterangan</th>
                    <th class="text-center">SA Refrence</th>
                    <th class="text-center">Status</th>
                </tr>
            </thead>
            <tbody class="tbodyapp">
                @{ var a = 1;}
                @foreach (var app in Model.allDataRetur)
                {
                    <tr>
                        <td><input type="checkbox" onclick="cbapp(@app.Id)" class="CbApp" id="cba@(app.Id)" data="@app.Id" sa="@app.SAId" fund="@app.FundId" mi="@app.MIId"></td>
                        <td>@a</td>
                        @{ a++;}
                        <td>@app.TransDate.ToShortDateString()</td>
                        <td>@app.NoRekening</td>
                        <td>@app.SA.Nama</td>
                        <td>@app.IFUAName</td>
                        <td>@app.Fund.Nama</td>
                        <td>@app.MI.Nama</td>
                        <td>@app.NamaBank</td>
                        <td>@app.RekeningNasabah</td>
                        <td>@app.NamaNasabah</td>
                        <td id="app@(app.Id)">@app.Nominal.ToString("n0")</td>
                        @if (app.KeteranganRetur != null)
                        {
                            <td>@app.KeteranganRetur</td>
                        }
                        else
                        {
                            <td>-</td>
                        }
                        <td>@app.SARefrence</td>
                        <td><span class="label label-@app.Matching.Warna">@app.Matching.Nama</span></td>
                    </tr>
                            }
            </tbody>
        </table>
    </div>

    <div class="well">
        <div class="col-sm-2 text-left">
            <button class="btn btn-success btn-sm" onclick="AcceptFund()">Accept</button>
            <button class="btn btn-danger btn-sm" onclick="RejectFund()">Reject</button>
        </div>
        <h5 class="text-center col-sm-9"><b>Data Fund</b></h5>
        <div class="col-sm-1">
            @using (Html.BeginForm("DownloadFund", "ReturManuals", FormMethod.Post, new { id = "formFund", @class = "form-horizontal" }))
            {
                <button type="submit" value="" class="btn btn-sm btn-primary">Download</button>
            }
        </div>
        <table id="tabelfund" class="table table-bordered table-hover" style="width:100%;">
            <thead>
                <tr>
                    <th><input type="checkbox" id="allCbFund"></th>
                    <th class="text-center">No</th>
                    <th class="text-center">Tanggal Upload</th>
                    <th class="text-center">Tanggal Transaksi</th>
                    <th class="text-center">No Rekening</th>
                    <th class="text-center">Nama Rekening</th>
                    <th class="text-center">Keterangan</th>
                    <th class="text-center">Jumlah</th>
                    <th class="text-center">Status</th>
                </tr>
            </thead>
            <tbody class="tbodyfund">
                @{ var b = 1;}
                @foreach (var fund in Model.allDataFund)
                {
                    <tr>
                        <td><input type="checkbox" onclick="cbfund(@fund.Id)" class="CbFund" id="cbf@(fund.Id)" data="@fund.Id" sa="@fund.Rekening.SAId" fund="@fund.Rekening.FundId" mi="@fund.Rekening.MIId"></td>
                        <td>@b</td>
                        @{ b++;}
                        <td>@fund.CreateDate.ToShortDateString()</td>
                        <td>@fund.Tanggal.ToShortDateString()</td>
                        <td>@fund.Rekening.NoRek</td>
                        <td>@fund.Rekening.NamaRek</td>
                        <td>@fund.Keterangan</td>
                        <td id="fund@(fund.Id)">@fund.Jumlah.ToString("n0")</td>
                        <td><span class="label label-@fund.Matching.Warna">@fund.Matching.Nama</span></td>
                    </tr>
                            }
            </tbody>
        </table>
    </div>
</div>
<div class="navbar navbar-inverse navbar-fixed-bottom">
    <div class="container">
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li id="message"></li>
            </ul>
            <div class="navbar-form navbar-right" role="search">
                <div class="form-group">
                    <label class="col-lg-4 control-label">Total Retur</label>
                    <div class="col-lg-8">
                        <input type="text" readonly class="form-control text-right" id="totalApp" value="0">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-4 control-label">Total Fund</label>
                    <div class="col-lg-8">
                        <input type="text" readonly class="form-control text-right" id="totalFund" value="0">
                    </div>
                </div>
                <button onclick="match()" class="btn btn-success">Match</button>
            </div>
        </div>
    </div>
</div>
<link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Content/sweetalert/sweetalert.min.js"></script>
<script>
    $(document).ready(function () {
        $('#tabelfund').DataTable({
            "scrollX": true,
            "scrollY": 300,
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "pageLength": 5,
            "autoWidth": false,
            "order": [[1, 'asc']],
            "columnDefs": [
                {
                    'targets': [0],
                    'searchable': false,
                    'orderable': false,
                    'width': '1%',
                    'className': 'dt-body-center'
                },
                {
                    "targets": [1],
                    "visible": false,
                    "searchable": false
                }]
        });

        $('#tabelapp').DataTable({
            "scrollX": true,
            "scrollY": 100,
            "lengthMenu": [[1, 5, 10, 25, 50, -1], [1, 5, 10, 25, 50, "All"]],
            "pageLength": 1,
            "autoWidth": false,
            "order": [[1, 'asc']],
            "columnDefs": [
                {
                    'targets': [0],
                    'searchable': false,
                    'orderable': false,
                    'width': '1%',
                    'className': 'dt-body-center'
                },
                {
                    "targets": [1],
                    "visible": false,
                    "searchable": false
                }]
        });

        var tableApp = $('#tabelapp').DataTable();
        $('#tabelapp.dataTables_filter input').unbind().bind('keyup', function () {
            var searchTerm = this.value.toLowerCase(),
                regex = '\\b' + searchTerm + '\\b';
            tableApp.rows().search(regex, true, false).draw();
        })

        var tableFund = $('#tabelfund').DataTable();
        $('#tabelfund.dataTables_filter input').unbind().bind('keyup', function () {
            var searchTerm = this.value.toLowerCase(),
                regex = '\\b' + searchTerm + '\\b';
            tableFund.rows().search(regex, true, false).draw();
        })
    });

    $('#allCbApp').click(function () {
        var all = this.checked;
        if (this.checked) {
            $('.CbApp').each(function () {
                var item = this.checked;
                if (all != item) {
                    this.checked = true;
                    var id = $(this).attr('data');
                    var jumlah = mintitik($('#app' + id).text());
                    var totalapp = mintitik($('#totalApp').val());
                    var newapp = parseInt(totalapp) + parseInt(jumlah);
                    //console.log('jumlah : '+jumlah+' | total : '+newapp);
                    $('#totalApp').val(plustitik(newapp));
                }
            });
        } else {
            $('.CbApp').each(function () {
                var item = this.checked;
                if (all != item) {
                    this.checked = false;
                    var id = $(this).attr('data');
                    var jumlah = mintitik($('#app' + id).text());
                    var totalapp = mintitik($('#totalApp').val());
                    var newapp = parseInt(totalapp) - parseInt(jumlah);
                    $('#totalApp').val(plustitik(newapp));
                }
            });
        }
    });

    $('#allCbFund').click(function () {
        var all = this.checked;
        if (this.checked) {
            $('.CbFund').each(function () {
                var item = this.checked;
                if (all != item) {
                    this.checked = true;
                    var id = $(this).attr('data');
                    var jumlah = mintitik($('#fund' + id).text());
                    var totalfund = mintitik($('#totalFund').val());
                    var newfund = parseInt(totalfund) + parseInt(jumlah);
                    $('#totalFund').val(plustitik(newfund));
                }
            });
        } else {
            $('.CbFund').each(function () {
                var item = this.checked;
                if (all != item) {
                    this.checked = false;
                    var id = $(this).attr('data');
                    var jumlah = mintitik($('#fund' + id).text());
                    var totalfund = mintitik($('#totalFund').val());
                    var newfund = parseInt(totalfund) - parseInt(jumlah);
                    $('#totalFund').val(plustitik(newfund));
                }
            });
        }
    });

    function cbapp(id) {
        var checkBox = document.getElementById("cba" + id);
        var jumlah = mintitik($('#app' + id).text());
        var totalapp = mintitik($('#totalApp').val());
        var newapp = 0;
        if (checkBox.checked == true) {
            newapp = parseInt(totalapp) + parseInt(jumlah);
        } else {
            newapp = parseInt(totalapp) - parseInt(jumlah);
        }
        $('#totalApp').val(plustitik(newapp));
    }

    function cbfund(id) {
        var checkBox = document.getElementById("cbf" + id);
        var jumlah = mintitik($('#fund' + id).text());
        var totalfund = mintitik($('#totalFund').val());
        var newfund = 0;
        if (checkBox.checked == true) {
            newfund = parseInt(totalfund) + parseInt(jumlah);
        } else {
            newfund = parseInt(totalfund) - parseInt(jumlah);
        }
        $('#totalFund').val(plustitik(newfund));
    }

    function formatDate(dates) {
        date = new Date(parseInt(dates.substr(6)));
        var year = date.getFullYear();
        var month = (1 + date.getMonth()).toString();
        month = month.length > 1 ? month : '0' + month;
        var day = date.getDate().toString();
        day = day.length > 1 ? day : '0' + day;
        var hour = date.getHours().toString();
        hour = hour.length > 1 ? hour : '0' + hour;
        var min = date.getMinutes().toString();
        min = min.length > 1 ? min : '0' + min;
        var sec = date.getSeconds().toString();
        sec = sec.length > 1 ? sec : '0' + sec;
        //return day + '/' + month + '/' + year + " " + hour + ":" + min + ":" + sec;
        return day + '/' + month + '/' + year;
    }

    function plustitik(angka) {
        var rupiah = '';
        var angkarev = angka.toString().split('').reverse().join('');
        for (var i = 0; i < angkarev.length; i++) if (i % 3 == 0) rupiah += angkarev.substr(i, 3) + ',';
        return rupiah.split('', rupiah.length - 1).reverse().join('');
    }

    function mintitik(angka) {
        var bil = angka;
        var loop = Math.floor(angka.length / 3);
        for (var i = 0; i < loop; i++) {
            bil = bil.replace(',', '');
        }
        return bil;
    }

    function match() {
        var totalfund = mintitik($('#totalFund').val());
        var totalapp = mintitik($('#totalApp').val());
        if (parseInt(totalfund) != 0 || parseInt(totalapp) != 0) {
            if (totalfund == totalapp) {
                //var items = new Array();
                var error = false;
                //$('#tabelapp').DataTable().rows().nodes().to$().find('input:checkbox.CbApp:checked').each(function () {
                //    var idApp = $(this).attr('data');
                //    var idAppSA = $(this).attr('sa');
                //    var idAppFund = $(this).attr('fund');
                //    var idAppMI = $(this).attr('mi');
                //    $('#tabelfund').DataTable().rows().nodes().to$().find('input:checkbox.CbFund:checked').each(function () {
                //        var idFund = $(this).attr('data');
                //        var idFundSA = $(this).attr('sa');
                //        var idFundFund = $(this).attr('fund');
                //        var idFundMI = $(this).attr('mi');

                //        if (idAppMI == 3 || idAppMI == 6) //If MNC or Corpus
                //        {
                //            if (idAppMI != idFundMI) { //Minimal MI harus sama
                //                error = true;
                //            }
                //        } else {
                //            if (idAppSA != idFundSA || idAppFund != idFundFund || idAppMI != idFundMI) { //SA, Fund, MI harus sama
                //                error = true;
                //            }
                //        }
                //    })
                //})

                if (error == false) {
                    var IdApps = new Array();
                    var IdFunds = new Array();
                    $('#tabelapp').DataTable().rows().nodes().to$().find('input:checkbox.CbApp:checked').each(function () {
                        var idApp = $(this).attr('data');
                        var IdApp = {};
                        IdApp.IdApp = idApp;
                        IdApps.push(IdApp);
                    })
                    $('#tabelfund').DataTable().rows().nodes().to$().find('input:checkbox.CbFund:checked').each(function () {
                        var idFund = $(this).attr('data');
                        var IdFund = {};
                        IdFund.IdFund = idFund;
                        IdFunds.push(IdFund);
                    })
                    bootbox.prompt({
                        title: "Are you sure to match this?",
                        inputType: 'textarea',
                        placeholder: 'Enter Description',
                        buttons: {
                            cancel: {
                                label: 'Cancel'
                            },
                            confirm: {
                                label: 'Match',
                                className: 'btn-success'
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                items = JSON.stringify({ 'IdApps': IdApps, 'IdFunds': IdFunds, 'keterangan': result });
                                $.ajax({
                                    url: "@Url.Action("RekonsManual", "ReturManuals")",
                                    type: 'POST',
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    data: items,
                                    success: function () {
                                        swal({
                                            title: "Success!",
                                            text: "The data has been saved!",
                                            type: "success",
                                            showCancelButton: false,
                                            showConfirmButton: false,
                                            timer: 1000,
                                        }, function () {
                                            window.location.href = "@Url.Action("Index", "ReturManuals")";
                                        });
                                    },
                                    error: function (response) {
                                        swal("Oops", "We couldn't connect to the server!", "error");
                                    }
                                });
                            } else if (result == "") {
                                swal({
                                    title: "Failed!",
                                    text: "Please enter a description!",
                                    type: "warning",
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                });
                            }
                        }
                    });
                }
                //else {
                //    swal({
                //        title: "Failed!",
                //        text: "Selected rekenings do not match!",
                //        type: "warning",
                //        showCancelButton: false,
                //        showConfirmButton: false,
                //        timer: 1000,
                //    });
                //}
            } else {
                swal({
                    title: "Failed!",
                    text: "The total is not the same!",
                    type: "warning",
                    showCancelButton: false,
                    showConfirmButton: false,
                    timer: 1000,
                });
            }
        } else {
            swal({
                title: "Failed!",
                text: "No data selected yet!",
                type: "warning",
                showCancelButton: false,
                showConfirmButton: false,
                timer: 1000,
            });
        }
    }

    function AcceptApp() {
        var countapp = $('#tabelapp').DataTable().rows().nodes().to$().find('input:checkbox.CbApp:checked').length;
        if (countapp > 0) {
            var items = new Array();
            $('#tabelapp').DataTable().rows().nodes().to$().find('input:checkbox.CbApp:checked').each(function () {
                var idApp = $(this).attr('data');
                var item = {};
                item.IdApp = idApp;
                items.push(item);
            })
            bootbox.prompt({
                title: countapp + " data application selected. Are you sure to accept this?",
                inputType: 'textarea',
                placeholder: 'Enter Description',
                buttons: {
                    cancel: {
                        label: 'Cancel'
                    },
                    confirm: {
                        label: 'Accept',
                        className: 'btn-success'
                    }
                },
                callback: function (result) {
                    if (result) {
                        items = JSON.stringify({ 'items': items, 'keterangan': result });
                        $.ajax({
                            url: "@Url.Action("AcceptApp", "ReturManuals")",
                            type: 'POST',
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            data: items,
                            success: function () {
                                swal({
                                    title: "Success!",
                                    text: "The data has been saved!",
                                    type: "success",
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                }, function () {
                                    window.location.href = "@Url.Action("Index", "ReturManuals")";
                                });
                            },
                            error: function (response) {
                                swal("Oops", "We couldn't connect to the server!", "error");
                                console.log(response);
                            }
                        });
                    } else if (result == "") {
                        swal({
                            title: "Failed!",
                            text: "Please enter a description!",
                            type: "warning",
                            showCancelButton: false,
                            showConfirmButton: false,
                            timer: 1000,
                        });
                    }
                }
            });
        } else {
            swal({
                title: "Failed!",
                text: "No data selected yet!",
                type: "warning",
                showCancelButton: false,
                showConfirmButton: false,
                timer: 1000,
            });
        }
    }

    function AcceptFund() {
        var countfund = $('#tabelfund').DataTable().rows().nodes().to$().find('input:checkbox.CbFund:checked').length;
        if (countfund > 0) {
            var items = new Array();
            $('#tabelfund').DataTable().rows().nodes().to$().find('input:checkbox.CbFund:checked').each(function () {
                var idFund = $(this).attr('data');
                var item = {};
                item.idFund = idFund;
                items.push(item);
            })
            bootbox.prompt({
                title: countfund + " data fund selected. Are you sure to accept this?",
                inputType: 'textarea',
                placeholder: 'Enter Description',
                buttons: {
                    cancel: {
                        label: 'Cancel'
                    },
                    confirm: {
                        label: 'Accept',
                        className: 'btn-success'
                    }
                },
                callback: function (result) {
                    if (result) {
                        items = JSON.stringify({ 'items': items, 'keterangan': result });
                        $.ajax({
                            url: "@Url.Action("AcceptFund", "ReturManuals")",
                            type: 'POST',
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            data: items,
                            success: function () {
                                swal({
                                    title: "Success!",
                                    text: "The data has been saved!",
                                    type: "success",
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                }, function () {
                                    window.location.href = "@Url.Action("Index", "ReturManuals")";
                                });
                            },
                            error: function (response) {
                                swal("Oops", "We couldn't connect to the server!", "error");
                            }
                        });
                    } else if (result == "") {
                        swal({
                            title: "Failed!",
                            text: "Please enter a description!",
                            type: "warning",
                            showCancelButton: false,
                            showConfirmButton: false,
                            timer: 1000,
                        });
                    }
                }
            });
        } else {
            swal({
                title: "Failed!",
                text: "No data selected yet!",
                type: "warning",
                showCancelButton: false,
                showConfirmButton: false,
                timer: 1000,
            });
        }
    }

    function RejectApp() {
        var countapp = $('#tabelapp').DataTable().rows().nodes().to$().find('input:checkbox.CbApp:checked').length;
        if (countapp > 0) {
            var items = new Array();
            $('#tabelapp').DataTable().rows().nodes().to$().find('input:checkbox.CbApp:checked').each(function () {
                var idApp = $(this).attr('data');
                var item = {};
                item.IdApp = idApp;
                items.push(item);
            })
            bootbox.prompt({
                title: countapp + " data application selected. Are you sure to reject this?",
                inputType: 'textarea',
                placeholder: 'Enter Description',
                buttons: {
                    cancel: {
                        label: 'Cancel'
                    },
                    confirm: {
                        label: 'Reject',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        items = JSON.stringify({ 'items': items, 'keterangan': result });
                        $.ajax({
                            url: "@Url.Action("RejectApp", "ReturManuals")",
                            type: 'POST',
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            data: items,
                            success: function () {
                                swal({
                                    title: "Success!",
                                    text: "The data has been saved!",
                                    type: "success",
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                }, function () {
                                    window.location.href = "@Url.Action("Index", "ReturManuals")";
                                });
                            },
                            error: function (response) {
                                swal("Oops", "We couldn't connect to the server!", "error");
                            }
                        });
                    } else if (result == "") {
                        swal({
                            title: "Failed!",
                            text: "Please enter a description!",
                            type: "warning",
                            showCancelButton: false,
                            showConfirmButton: false,
                            timer: 1000,
                        });
                    }
                }
            });
        } else {
            swal({
                title: "Failed!",
                text: "No data selected yet!",
                type: "warning",
                showCancelButton: false,
                showConfirmButton: false,
                timer: 1000,
            });
        }
    }

    function RejectFund() {
        var countfund = $('#tabelfund').DataTable().rows().nodes().to$().find('input:checkbox.CbFund:checked').length;
        if (countfund > 0) {
            var items = new Array();
            $('#tabelfund').DataTable().rows().nodes().to$().find('input:checkbox.CbFund:checked').each(function () {
                var idFund = $(this).attr('data');
                var item = {};
                item.idFund = idFund;
                items.push(item);
            })
            bootbox.prompt({
                title: countfund + " data fund selected. Are you sure to reject this?",
                inputType: 'textarea',
                placeholder: 'Enter Description',
                buttons: {
                    cancel: {
                        label: 'Cancel'
                    },
                    confirm: {
                        label: 'Reject',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        items = JSON.stringify({ 'items': items, 'keterangan': result });
                        $.ajax({
                            url: "@Url.Action("RejectFund", "ReturManuals")",
                            type: 'POST',
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            data: items,
                            success: function () {
                                swal({
                                    title: "Success!",
                                    text: "The data has been saved!",
                                    type: "success",
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                }, function () {
                                    window.location.href = "@Url.Action("Index", "ReturManuals")";
                                });
                            },
                            error: function (response) {
                                swal("Oops", "We couldn't connect to the server!", "error");
                            }
                        });
                    } else if (result == "") {
                        swal({
                            title: "Failed!",
                            text: "Please enter a description!",
                            type: "warning",
                            showCancelButton: false,
                            showConfirmButton: false,
                            timer: 1000,
                        });
                    }
                }
            });
        } else {
            swal({
                title: "Failed!",
                text: "No data selected yet!",
                type: "warning",
                showCancelButton: false,
                showConfirmButton: false,
                timer: 1000,
            });
        }
    }
</script>
